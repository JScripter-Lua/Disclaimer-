-- Mid-Journey | Credit S
-- One-file, lag-free Rayfield rewrite of “99 Night in the Forest” + “Item bringer”
-- No external UI left, only Rayfield elements.  All original features preserved.

local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()

local Players           = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace         = game:GetService("Workspace")
local RunService        = game:GetService("RunService")
local UserInputService  = game:GetService("UserInputService")

local LocalPlayer = Players.LocalPlayer
local character, humanoidRootPart
local inventory = LocalPlayer:WaitForChild("Inventory")

------------------------------------------------------------------
-- 1.  UTILS (copied 1-to-1, no shortening)
------------------------------------------------------------------
local function onCharacterAdded(char)
    character = char
    humanoidRootPart = character:WaitForChild("HumanoidRootPart")
end
LocalPlayer.CharacterAdded:Connect(onCharacterAdded)
if LocalPlayer.Character then onCharacterAdded(LocalPlayer.Character) end

local function findSack()
    for _, item in pairs(inventory:GetChildren()) do
        if string.find(item.Name, "Sack") then return item end
    end
    return nil
end

local sack = findSack()
inventory.ChildAdded:Connect(function(child)
    if string.find(child.Name, "Sack") then sack = child end
end)
inventory.ChildRemoved:Connect(function(child)
    if sack and child == sack then sack = findSack() end
end)

local function isSackFull()
    if not sack then return true end
    local current   = sack:GetAttribute("NumberItems")
    local capacity  = sack:GetAttribute("Capacity")
    return current ~= nil and capacity ~= nil and current >= capacity
end

local function store(item)
    if not sack then return end
    local part = item:FindFirstChildWhichIsA("BasePart")
    if part then
        humanoidRootPart.CFrame = part.CFrame
        task.wait(0.2)
        ReplicatedStorage:WaitForChild("RemoteEvents"):WaitForChild("RequestBagStoreItem"):InvokeServer(sack, item)
        task.wait(0.2)
    end
end

------------------------------------------------------------------
-- 2.  CONFIG TABLES (exact copy from originals)
------------------------------------------------------------------
local toolsDamageIDs = {
    ["Old Axe"]     = "3_7367831688",
    ["Good Axe"]    = "112_7367831688",
    ["Strong Axe"]  = "116_7367831688",
    ["Chainsaw"]    = "647_8992824875",
    ["Spear"]       = "196_8999010016"
}

local alimentos = {
    "Apple","Berry","Carrot","Cake","Chili","Cooked Morsel","Cooked Steak"
}

local ie = {
    "Bandage","Bolt","Broken Fan","Broken Microwave","Cake","Carrot","Chair","Coal","Coin Stack","Cooked Morsel","Cooked Steak","Fuel Canister","Iron Body","Leather Armor","Log","MadKit","Metal Chair","MedKit","Old Car Engine","Old Flashlight","Old Radio","Revolver","Revolver Ammo","Rifle","Rifle Ammo","Morsel","Sheet Metal","Steak","Tyre","Washing Machine"
}

local me = {"Bunny","Wolf","Alpha Wolf","Bear","Cultist","Crossbow Cultist","Alien"}

local junkItems      = {"Tyre","Bolt","Broken Fan","Broken Microwave","Sheet Metal","Old Radio","Washing Machine","Old Car Engine"}
local fuelItems      = {"Log","Chair","Coal","Fuel Canister","Oil Barrel"}
local foodItems      = {"Cake","Cooked Steak","Cooked Morsel","Steak","Morsel","Berry","Carrot"}
local medicalItems   = {"Bandage","MedKit"}
local equipmentItems = {"Revolver","Rifle","Leather Body","Iron Body","Revolver Ammo","Rifle Ammo","Giant Sack","Good Sack","Strong Axe","Good Axe"}

local campfireFuelItems = {"Log","Coal","Fuel Canister","Oil Barrel","Biofuel"}
local autocookItems     = {"Morsel","Steak"}

------------------------------------------------------------------
-- 3.  STATE VARIABLES (exact copy)
------------------------------------------------------------------
local killAuraToggle   = false
local chopAuraToggle   = false
local auraRadius       = 50
local currentammount   = 0

local autoFeedToggle   = false
local selectedFood     = "Carrot"
local hungerThreshold  = 75

local autoUpgradeCampfireEnabled = false
local alwaysFeedEnabledItems     = {}
local autoCookEnabled            = false
local autoCookEnabledItems       = {}

local flyToggle = false
local flySpeed  = 1
local speed     = 16
local instantInteractEnabled = false
local torchLoop

------------------------------------------------------------------
-- 4.  ORIGINAL FUNCTIONS (unchanged, only wrapped)
------------------------------------------------------------------
local function getAnyToolWithDamageID(isChopAura)
    for toolName, damageID in pairs(toolsDamageIDs) do
        if isChopAura and toolName ~= "Old Axe" and toolName ~= "Good Axe" and toolName ~= "Strong Axe" then
            continue
        end
        local tool = LocalPlayer:FindFirstChild("Inventory") and LocalPlayer.Inventory:FindFirstChild(toolName)
        if tool then return tool, damageID end
    end
    return nil, nil
end

local function equipTool(tool)
    if tool then
        ReplicatedStorage:WaitForChild("RemoteEvents").EquipItemHandle:FireServer("FireAllClients", tool)
    end
end

local function unequipTool(tool)
    if tool then
        ReplicatedStorage:WaitForChild("RemoteEvents").UnequipItemHandle:FireServer("FireAllClients", tool)
    end
end

local function killAuraLoop()
    while killAuraToggle do
        local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
        local hrp = character:FindFirstChild("HumanoidRootPart")
        if hrp then
            local tool, damageID = getAnyToolWithDamageID(false)
            if tool and damageID then
                equipTool(tool)
                for _, mob in ipairs(Workspace.Characters:GetChildren()) do
                    if mob:IsA("Model") then
                        local part = mob:FindFirstChildWhichIsA("BasePart")
                        if part and (part.Position - hrp.Position).Magnitude <= auraRadius then
                            pcall(function()
                                ReplicatedStorage:WaitForChild("RemoteEvents").ToolDamageObject:InvokeServer(
                                    mob, tool, damageID, CFrame.new(part.Position)
                                )
                            end)
                        end
                    end
                end
                task.wait(0.1)
            else
                task.wait(1)
            end
        else
            task.wait(0.5)
        end
    end
end

local function chopAuraLoop()
    while chopAuraToggle do
        local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
        local hrp = character:FindFirstChild("HumanoidRootPart")
        if hrp then
            local tool, baseDamageID = getAnyToolWithDamageID(true)
            if tool and baseDamageID then
                equipTool(tool)
                currentammount = currentammount + 1
                local trees = {}
                local map = Workspace:FindFirstChild("Map")
                if map then
                    if map:FindFirstChild("Foliage") then
                        for _, obj in ipairs(map.Foliage:GetChildren()) do
                            if obj:IsA("Model") and obj.Name == "Small Tree" then
                                table.insert(trees, obj)
                            end
                        end
                    end
                    if map:FindFirstChild("Landmarks") then
                        for _, obj in ipairs(map.Landmarks:GetChildren()) do
                            if obj:IsA("Model") and obj.Name == "Small Tree" then
                                table.insert(trees, obj)
                            end
                        end
                    end
                end
                for _, tree in ipairs(trees) do
                    local trunk = tree:FindFirstChild("Trunk")
                    if trunk and trunk:IsA("BasePart") and (trunk.Position - hrp.Position).Magnitude <= auraRadius then
                        local alreadyammount = false
                        task.spawn(function()
                            while chopAuraToggle and tree and tree.Parent and not alreadyammount do
                                alreadyammount = true
                                currentammount = currentammount + 1
                                pcall(function()
                                    ReplicatedStorage:WaitForChild("RemoteEvents").ToolDamageObject:InvokeServer(
                                        tree, tool, tostring(currentammount) .. "_7367831688",
                                        CFrame.new(-2.962610244751, 4.5547881126404, -75.950843811035, 0.89621275663376, -1.3894891459643e-08, 0.957076371, 0.639657021, 0.762253821, 0.0990355015, -0.719334781, 0.639031112, -0.272391081)
                                    )
                                end)
                                task.wait(0.5)
                            end
                        end)
                    end
                end
                task.wait(0.1)
            else
                task.wait(1)
            end
        else
            task.wait(0.5)
        end
    end
end

function wiki(nome)
    local c = 0
    for _, i in ipairs(Workspace.Items:GetChildren()) do
        if i.Name == nome then c = c + 1 end
    end
    return c
end

function ghn()
    return math.floor(LocalPlayer.PlayerGui.Interface.StatBars.HungerBar.Bar.Size.X.Scale * 100)
end

function feed(nome)
    for _, item in ipairs(Workspace.Items:GetChildren()) do
        if item.Name == nome then
            ReplicatedStorage.RemoteEvents.RequestConsumeItem:InvokeServer(item)
            break
        end
    end
end

local function moveItemToPos(item, position)
    if not item or not item:IsDescendantOf(workspace) or (not item:IsA("BasePart") and not item:IsA("Model")) then return end
    local part = item:IsA("Model") and (item.PrimaryPart or item:FindFirstChildWhichIsA("BasePart") or item:FindFirstChild("Handle")) or item
    if not part or not part:IsA("BasePart") then return end
    if item:IsA("Model") and not item.PrimaryPart then pcall(function() item.PrimaryPart = part end) end
    pcall(function()
        game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvents").RequestStartDraggingItem:FireServer(item)
        if item:IsA("Model") then
            item:SetPrimaryPartCFrame(CFrame.new(position))
        else
            part.CFrame = CFrame.new(position)
        end
        game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvents").StopDraggingItem:FireServer(item)
    end)
end

local function tp1()
    (game.Players.LocalPlayer.Character or game.Players.LocalPlayer.CharacterAdded:Wait()):WaitForChild("HumanoidRootPart").CFrame =
    CFrame.new(0.43132782, 15.77634621, -1.88620758, -0.270917892, 0.102997094, 0.957076371, 0.639657021, 0.762253821, 0.0990355015, -0.719334781, 0.639031112, -0.272391081)
end

local function tp2()
    local targetPart = workspace:FindFirstChild("Map")
        and workspace.Map:FindFirstChild("Landmarks")
        and workspace.Map.Landmarks:FindFirstChild("Stronghold")
        and workspace.Map.Landmarks.Stronghold:FindFirstChild("Functional")
        and workspace.Map.Landmarks.Stronghold.Functional:FindFirstChild("EntryDoors")
        and workspace.Map.Landmarks.Stronghold.Functional.EntryDoors:FindFirstChild("DoorRight")
        and workspace.Map.Landmarks.Stronghold.Functional.EntryDoors.DoorRight:FindFirstChild("Model")
    if targetPart then
        local children = targetPart:GetChildren()
        local destination = children[5]
        if destination and destination:IsA("BasePart") then
            local hrp = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
            if hrp then hrp.CFrame = destination.CFrame + Vector3.new(0, 5, 0) end
        end
    end
end

------------------------------------------------------------------
-- 5.  ESP FUNCTIONS (soft pastel colors)
------------------------------------------------------------------
local function createESPText(part, text, color)
    if part:FindFirstChild("ESPTexto") then return end
    local esp = Instance.new("BillboardGui")
    esp.Name = "ESPTexto"
    esp.Adornee = part
    esp.Size = UDim2.new(0, 100, 0, 20)
    esp.StudsOffset = Vector3.new(0, 2.5, 0)
    esp.AlwaysOnTop = true
    esp.MaxDistance = 300
    local label = Instance.new("TextLabel")
    label.Parent = esp
    label.Size = UDim2.new(1, 0, 1, 0)
    label.BackgroundTransparency = 1
    label.Text = text
    label.TextColor3 = color or Color3.fromRGB(255, 255, 255)
    label.TextStrokeTransparency = 0.5
    label.TextScaled = true
    label.Font = Enum.Font.GothamBold
    esp.Parent = part
end

local function Aesp(nome, tipo)
    local container, color
    if tipo == "item" then
        container = workspace:FindFirstChild("Items")
        color = Color3.fromRGB(150, 255, 150)
    elseif tipo == "mob" then
        container = workspace:FindFirstChild("Characters")
        color = Color3.fromRGB(255, 255, 150)
    else return end
    if not container then return end
    for _, obj in ipairs(container:GetChildren()) do
        if obj.Name == nome then
            local part = obj:IsA("BasePart") and obj or obj:FindFirstChildWhichIsA("BasePart")
            if part then createESPText(part, obj.Name, color) end
        end
    end
end

local function Desp(nome, tipo)
    local container = (tipo == "item" and workspace:FindFirstChild("Items")) or (tipo == "mob" and workspace:FindFirstChild("Characters"))
    if not container then return end
    for _, obj in ipairs(container:GetChildren()) do
        if obj.Name == nome then
            local part = obj:IsA("BasePart") and obj or obj:FindFirstChildWhichIsA("BasePart")
            if part then for _, gui in ipairs(part:GetChildren()) do if gui:IsA("BillboardGui") and gui.Name == "ESPTexto" then gui:Destroy() end end end
        end
    end
end

------------------------------------------------------------------
-- 6.  RAYFIELD WINDOW & TABS
------------------------------------------------------------------
local Window = Rayfield:CreateWindow({
    Name = "Mid-Journey Hub (.gg/6UaRDjBY42)",
    LoadingTitle = "99 Nights in the Forest",
    LoadingSubtitle = "Credits: (SJAD) - Sea Journeys Advanced Development",
    Theme = "Light",
    ShowText = "Show GUI",
    Icon = 105495960707973,
    ConfigurationSaving = {
        Enabled = true,
        FolderName = "SJAD_99",
        FileName = "99NitFConfig"
    },
    Discord = {
        Enabled = true,
        Invite = "6UaRDjBY42",
        RememberJoins = true
    },
   KeySystem = false, 
   KeySettings = {
      Title = "SJAD Keysystem",
      Subtitle = "Sorry I need more member :)",
      Note = "Get from discord server : discord.gg/6UaRDjBY42", 
      FileName = "SJAD", 
      SaveKey = false, 
      GrabKeyFromSite = false, 
      Key = {"SJAD-0001-111"} 
   }
})


local Tabs = {
    Combat = Window:CreateTab("Combat"),
    Main   = Window:CreateTab("Main"),
    Auto   = Window:CreateTab("Auto"),
    ESP    = Window:CreateTab("ESP"),
    Bring  = Window:CreateTab("Bring"),
    Tp     = Window:CreateTab("Teleport"),
    Player = Window:CreateTab("Player")
}

------------------------------------------------------------------
-- 7.  COMBAT TAB
------------------------------------------------------------------
Tabs.Combat:CreateSection("Aura")
Tabs.Combat:CreateToggle({Name = "Kill Aura", CurrentValue = false, Flag = "KillAura", Callback = function(v)
    killAuraToggle = v
    if v then task.spawn(killAuraLoop) else local tool, _ = getAnyToolWithDamageID(false); unequipTool(tool) end
end})
Tabs.Combat:CreateToggle({Name = "Chop Aura", CurrentValue = false, Flag = "ChopAura", Callback = function(v)
    chopAuraToggle = v
    if v then task.spawn(chopAuraLoop) else local tool, _ = getAnyToolWithDamageID(true); unequipTool(tool) end
end})
Tabs.Combat:CreateSlider({Name = "Aura Radius", Range = {10, 500}, Increment = 10, Suffix = " studs", CurrentValue = 50, Flag = "AuraRadius", Callback = function(v) auraRadius = v end})

------------------------------------------------------------------
-- 8.  MAIN TAB
------------------------------------------------------------------
Tabs.Main:CreateSection("Auto Feed")
Tabs.Main:CreateDropdown({Name = "Select Food", Options = alimentos, CurrentOption = {"Carrot"}, MultipleOptions = false, Flag = "FoodSelect", Callback = function(v) selectedFood = v[1] end})
Tabs.Main:CreateInput({Name = "Feed %", PlaceholderText = "75", RemoveTextAfterFocusLost = false, Flag = "FeedPct", Callback = function(v)
    local n = tonumber(v)
    if n then hungerThreshold = math.clamp(n, 0, 100) end
end})
Tabs.Main:CreateToggle({Name = "Auto Feed", CurrentValue = false, Flag = "AutoFeed", Callback = function(v)
    autoFeedToggle = v
    if v then
        task.spawn(function()
            while autoFeedToggle do
                task.wait(0.075)
                if wiki(selectedFood) == 0 then
                    autoFeedToggle = false
                    Rayfield:Notify({Title = "Auto Food Paused", Content = "The food is gone", Duration = 3})
                    break
                end
                if ghn() <= hungerThreshold then feed(selectedFood) end
            end
        end)
    end
end})

------------------------------------------------------------------
-- 9.  AUTO TAB
------------------------------------------------------------------
Tabs.Auto:CreateSection("Auto Upgrade Campfire")
Tabs.Auto:CreateDropdown({Name = "Auto Upgrade Campfire", Options = campfireFuelItems, CurrentOption = {}, MultipleOptions = true, Flag = "UpgradeFuel", Callback = function(opts)
    for _, itemName in ipairs(campfireFuelItems) do alwaysFeedEnabledItems[itemName] = table.find(opts, itemName) ~= nil end
end})
Tabs.Auto:CreateToggle({Name = "Auto Upgrade Campfire", CurrentValue = false, Flag = "AutoUpgrade", Callback = function(v)
    autoUpgradeCampfireEnabled = v
    if v then
        task.spawn(function()
            while autoUpgradeCampfireEnabled do
                for itemName, enabled in pairs(alwaysFeedEnabledItems) do
                    if enabled then
                        for _, item in ipairs(workspace:WaitForChild("Items"):GetChildren()) do
                            if item.Name == itemName then moveItemToPos(item, Vector3.new(0, 19, 0)) end
                        end
                    end
                end
                task.wait(2)
            end
        end)
    end
end})

Tabs.Auto:CreateSection("Auto Cook Food")
Tabs.Auto:CreateDropdown({Name = "Auto Cook Food", Options = autocookItems, CurrentOption = {}, MultipleOptions = true, Flag = "AutoCookItems", Callback = function(opts)
    for _, itemName in ipairs(autocookItems) do autoCookEnabledItems[itemName] = table.find(opts, itemName) ~= nil end
end})
Tabs.Auto:CreateToggle({Name = "Auto Cook Food", CurrentValue = false, Flag = "AutoCook", Callback = function(v) autoCookEnabled = v end})
coroutine.wrap(function()
    while true do
        if autoCookEnabled then
            for itemName, enabled in pairs(autoCookEnabledItems) do
                if enabled then
                    for _, item in ipairs(Workspace:WaitForChild("Items"):GetChildren()) do
                        if item.Name == itemName then moveItemToPos(item, Vector3.new(0, 19, 0)) end
                    end
                end
            end
        end
        task.wait(0.5)
    end
end)()

------------------------------------------------------------------
-- 10.  ESP TAB
------------------------------------------------------------------
local selectedItems = {}
local selectedMobs  = {}
local espItemsEnabled = false
local espMobsEnabled  = false
local espConnections  = {}

Tabs.ESP:CreateSection("ESP Items")
Tabs.ESP:CreateDropdown({Name = "ESP Items", Options = ie, CurrentOption = {}, MultipleOptions = true, Flag = "ESPI", Callback = function(opts)
    selectedItems = opts
    if espItemsEnabled then
        for _, name in ipairs(ie) do
            if table.find(selectedItems, name) then Aesp(name, "item") else Desp(name, "item") end
        end
    end
end})
Tabs.ESP:CreateToggle({Name = "Enable ESP Items", CurrentValue = false, Flag = "EnableESPI", Callback = function(v)
    espItemsEnabled = v
    for _, name in ipairs(ie) do
        if v and table.find(selectedItems, name) then Aesp(name, "item") else Desp(name, "item") end
    end
    if v then
        if not espConnections["Items"] then
            local container = workspace:FindFirstChild("Items")
            if container then
                espConnections["Items"] = container.ChildAdded:Connect(function(obj)
                    if table.find(selectedItems, obj.Name) then
                        local part = obj:IsA("BasePart") and obj or obj:FindFirstChildWhichIsA("BasePart")
                        if part then createESPText(part, obj.Name, Color3.fromRGB(150, 255, 150)) end
                    end
                end)
            end
        end
    else
        if espConnections["Items"] then espConnections["Items"]:Disconnect(); espConnections["Items"] = nil end
    end
end})

Tabs.ESP:CreateSection("ESP Entity")
Tabs.ESP:CreateDropdown({Name = "ESP Entity", Options = me, CurrentOption = {}, MultipleOptions = true, Flag = "ESPM", Callback = function(opts)
    selectedMobs = opts
    if espMobsEnabled then
        for _, name in ipairs(me) do
            if table.find(selectedMobs, name) then Aesp(name, "mob") else Desp(name, "mob") end
        end
    end
end})
Tabs.ESP:CreateToggle({Name = "Enable ESP Entity", CurrentValue = false, Flag = "EnableESPM", Callback = function(v)
    espMobsEnabled = v
    for _, name in ipairs(me) do
        if v and table.find(selectedMobs, name) then Aesp(name, "mob") else Desp(name, "mob") end
    end
    if v then
        if not espConnections["Mobs"] then
            local container = workspace:FindFirstChild("Characters")
            if container then
                espConnections["Mobs"] = container.ChildAdded:Connect(function(obj)
                    if table.find(selectedMobs, obj.Name) then
                        local part = obj:IsA("BasePart") and obj or obj:FindFirstChildWhichIsA("BasePart")
                        if part then createESPText(part, obj.Name, Color3.fromRGB(255, 255, 150)) end
                    end
                end)
            end
        end
    else
        if espConnections["Mobs"] then espConnections["Mobs"]:Disconnect(); espConnections["Mobs"] = nil end
    end
end})

------------------------------------------------------------------
-- 11.  BRING TAB  (Item bringer logic)
------------------------------------------------------------------
local selectedJunkItems      = {}
local selectedFuelItems      = {}
local selectedFoodItems      = {}
local selectedMedicalItems   = {}
local selectedEquipmentItems = {}

local function bringItems(list)
    if not character or not humanoidRootPart then return end
    local lastPos = humanoidRootPart.CFrame
    local targetPos = humanoidRootPart.Position + Vector3.new(2, 0, 0)
    for _, itemName in ipairs(list) do
        for _, item in ipairs(workspace:GetDescendants()) do
            if item.Name == itemName and (item:IsA("BasePart") or item:IsA("Model")) and (item.PrimaryPart or item:FindFirstChildWhichIsA("BasePart")) then
                if isSackFull() then break end
                store(item)
            end
        end
    end
    humanoidRootPart.CFrame = lastPos
end

Tabs.Bring:CreateSection("Junk")
Tabs.Bring:CreateDropdown({Name = "Select Junk", Options = junkItems, CurrentOption = {}, MultipleOptions = true, Flag = "JunkList", Callback = function(v) selectedJunkItems = v end})
Tabs.Bring:CreateButton({Name = "Bring Junk Items", Callback = function() bringItems(selectedJunkItems) end})

Tabs.Bring:CreateSection("Fuel")
Tabs.Bring:CreateDropdown({Name = "Select Fuel", Options = fuelItems, CurrentOption = {}, MultipleOptions = true, Flag = "FuelList", Callback = function(v) selectedFuelItems = v end})
Tabs.Bring:CreateButton({Name = "Bring Fuel Items", Callback = function() bringItems(selectedFuelItems) end})

Tabs.Bring:CreateSection("Food")
Tabs.Bring:CreateDropdown({Name = "Select Food", Options = foodItems, CurrentOption = {}, MultipleOptions = true, Flag = "FoodList", Callback = function(v) selectedFoodItems = v end})
Tabs.Bring:CreateButton({Name = "Bring Food Items", Callback = function() bringItems(selectedFoodItems) end})

Tabs.Bring:CreateSection("Medicine")
Tabs.Bring:CreateDropdown({Name = "Select Medical", Options = medicalItems, CurrentOption = {}, MultipleOptions = true, Flag = "MedList", Callback = function(v) selectedMedicalItems = v end})
Tabs.Bring:CreateButton({Name = "Bring Medical Items", Callback = function() bringItems(selectedMedicalItems) end})

Tabs.Bring:CreateSection("Equipment")
Tabs.Bring:CreateDropdown({Name = "Select Equipment", Options = equipmentItems, CurrentOption = {}, MultipleOptions = true, Flag = "EquipList", Callback = function(v) selectedEquipmentItems = v end})
Tabs.Bring:CreateButton({Name = "Bring Equipment Items", Callback = function() bringItems(selectedEquipmentItems) end})

------------------------------------------------------------------
-- 12.  TELEPORT TAB
------------------------------------------------------------------
Tabs.Tp:CreateButton({Name = "Teleport to Campfire", Callback = tp1})
Tabs.Tp:CreateButton({Name = "Teleport to Stronghold", Callback = tp2})

------------------------------------------------------------------
-- 13.  PLAYER TAB
------------------------------------------------------------------
-- Fly variables
local FLYING = false
local flyKeyDown, flyKeyUp, mfly1, mfly2

-- sFLY / NOFLY / MobileFly copied 1-to-1 (no shortening)
local function sFLY()
    repeat task.wait() until LocalPlayer and LocalPlayer.Character and LocalPlayer.Character:WaitForChild("HumanoidRootPart") and LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
    repeat task.wait() until UserInputService
    if flyKeyDown or flyKeyUp then flyKeyDown:Disconnect(); flyKeyUp:Disconnect() end
    local T = LocalPlayer.Character:WaitForChild("HumanoidRootPart")
    local CONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
    local lCONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
    local SPEED = flySpeed
    local function FLY()
        FLYING = true
        local BG = Instance.new('BodyGyro')
        local BV = Instance.new('BodyVelocity')
        BG.P = 9e4; BG.Parent = T; BV.Parent = T
        BG.MaxTorque = Vector3.new(9e9, 9e9, 9e9); BG.CFrame = T.CFrame
        BV.Velocity = Vector3.new(0, 0, 0); BV.MaxForce = Vector3.new(9e9, 9e9, 9e9)
        task.spawn(function()
            while FLYING do
                task.wait()
                if not flyToggle and LocalPlayer.Character:FindFirstChildOfClass('Humanoid') then
                    LocalPlayer.Character:FindFirstChildOfClass('Humanoid').PlatformStand = true
                end
                if CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 or CONTROL.Q + CONTROL.E ~= 0 then
                    SPEED = flySpeed
                elseif not (CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 or CONTROL.Q + CONTROL.E ~= 0) and SPEED ~= 0 then
                    SPEED = 0
                end
                if (CONTROL.L + CONTROL.R) ~= 0 or (CONTROL.F + CONTROL.B) ~= 0 or (CONTROL.Q + CONTROL.E) ~= 0 then
                    BV.Velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (CONTROL.F + CONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(CONTROL.L + CONTROL.R, (CONTROL.F + CONTROL.B + CONTROL.Q + CONTROL.E) * 0.2, 0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
                    lCONTROL = {F = CONTROL.F, B = CONTROL.B, L = CONTROL.L, R = CONTROL.R}
                elseif (CONTROL.L + CONTROL.R) == 0 and (CONTROL.F + CONTROL.B) == 0 and (CONTROL.Q + CONTROL.E) == 0 and SPEED ~= 0 then
                    BV.Velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (lCONTROL.F + lCONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(lCONTROL.L + lCONTROL.R, (lCONTROL.F + lCONTROL.B + CONTROL.Q + CONTROL.E) * 0.2, 0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
                else
                    BV.Velocity = Vector3.new(0, 0, 0)
                end
                BG.CFrame = workspace.CurrentCamera.CoordinateFrame
            end
            CONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
            lCONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
            SPEED = 0
            BG:Destroy(); BV:Destroy()
            if LocalPlayer.Character:FindFirstChildOfClass('Humanoid') then
                LocalPlayer.Character:FindFirstChildOfClass('Humanoid').PlatformStand = false
            end
        end)
    end
    flyKeyDown = UserInputService.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.Keyboard then
            local KEY = input.KeyCode.Name
            if KEY == "W" then CONTROL.F = flySpeed
            elseif KEY == "S" then CONTROL.B = -flySpeed
            elseif KEY == "A" then CONTROL.L = -flySpeed
            elseif KEY == "D" then CONTROL.R = flySpeed
            elseif KEY == "E" then CONTROL.Q = flySpeed * 2
            elseif KEY == "Q" then CONTROL.E = -flySpeed * 2 end
            pcall(function() workspace.CurrentCamera.CameraType = Enum.CameraType.Track end)
        end
    end)
    flyKeyUp = UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.Keyboard then
            local KEY = input.KeyCode.Name
            if KEY == "W" then CONTROL.F = 0
            elseif KEY == "S" then CONTROL.B = 0
            elseif KEY == "A" then CONTROL.L = 0
            elseif KEY == "D" then CONTROL.R = 0
            elseif KEY == "E" then CONTROL.Q = 0
            elseif KEY == "Q" then CONTROL.E = 0 end
        end
    end)
    FLY()
end

local function NOFLY()
    FLYING = false
    if flyKeyDown then flyKeyDown:Disconnect() end
    if flyKeyUp then flyKeyUp:Disconnect() end
    if mfly1 then mfly1:Disconnect() end
    if mfly2 then mfly2:Disconnect() end
    if LocalPlayer.Character:FindFirstChildOfClass('Humanoid') then
        LocalPlayer.Character:FindFirstChildOfClass('Humanoid').PlatformStand = false
    end
    pcall(function() workspace.CurrentCamera.CameraType = Enum.CameraType.Custom end)
end

local function MobileFly()
    -- BodyVelocity / BodyGyro mobile fly (exact copy)
    local root = LocalPlayer.Character:WaitForChild("HumanoidRootPart")
    local camera = workspace.CurrentCamera
    local v3none = Vector3.new(); local v3zero = Vector3.new(0, 0, 0); local v3inf = Vector3.new(9e9, 9e9, 9e9)
    local controlModule = require(LocalPlayer.PlayerScripts:WaitForChild("PlayerModule"):WaitForChild("ControlModule"))
    local bv = Instance.new("BodyVelocity")
    bv.Name = "BodyVelocity"; bv.Parent = root; bv.MaxForce = v3zero; bv.Velocity = v3zero
    local bg = Instance.new("BodyGyro")
    bg.Name = "BodyGyro"; bg.Parent = root; bg.MaxTorque = v3inf; bg.P = 1000; bg.D = 50
    mfly1 = LocalPlayer.CharacterAdded:Connect(function()
        local newRoot = LocalPlayer.Character:WaitForChild("HumanoidRootPart")
        local newBv = Instance.new("BodyVelocity"); newBv.Name = "BodyVelocity"; newBv.Parent = newRoot; newBv.MaxForce = v3zero; newBv.Velocity = v3zero
        local newBg = Instance.new("BodyGyro"); newBg.Name = "BodyGyro"; newBg.Parent = newRoot; newBg.MaxTorque = v3inf; newBg.P = 1000; newBg.D = 50
    end)
    mfly2 = RunService.RenderStepped:Connect(function()
        root = LocalPlayer.Character:WaitForChild("HumanoidRootPart")
        camera = workspace.CurrentCamera
        if LocalPlayer.Character:FindFirstChildWhichIsA("Humanoid") and root and root:FindFirstChild("BodyVelocity") and root:FindFirstChild("BodyGyro") then
            local humanoid = LocalPlayer.Character:FindFirstChildWhichIsA("Humanoid")
            local VelocityHandler = root:FindFirstChild("BodyVelocity")
            local GyroHandler = root:FindFirstChild("BodyGyro")
            VelocityHandler.MaxForce = v3inf; GyroHandler.MaxTorque = v3inf
            humanoid.PlatformStand = true
            GyroHandler.CFrame = camera.CoordinateFrame
            VelocityHandler.Velocity = v3none
            local direction = controlModule:GetMoveVector()
            if direction.X > 0 then VelocityHandler.Velocity = VelocityHandler.Velocity + camera.CFrame.RightVector * (direction.X * (flySpeed * 50)) end
            if direction.X < 0 then VelocityHandler.Velocity = VelocityHandler.Velocity + camera.CFrame.RightVector * (direction.X * (flySpeed * 50)) end
            if direction.Z > 0 then VelocityHandler.Velocity = VelocityHandler.Velocity - camera.CFrame.LookVector * (direction.Z * (flySpeed * 50)) end
            if direction.Z < 0 then VelocityHandler.Velocity = VelocityHandler.Velocity - camera.CFrame.LookVector * (direction.Z * (flySpeed * 50)) end
        end
    end)
end

Tabs.Player:CreateSection("Main")

Tabs.Player:CreateSlider({Name = "Speed", Range = {16, 150}, Increment = 1, Suffix = "", CurrentValue = 16, Flag = "WalkSpeed", Callback = function(v) speed = v end})
Tabs.Player:CreateToggle({Name = "Enable Speed", CurrentValue = false, Flag = "EnableSpeed", Callback = function(v)
    local humanoid = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
    if humanoid then humanoid.WalkSpeed = v and speed or 16 end
end})

local noclipConnection
Tabs.Player:CreateToggle({Name = "Noclip", CurrentValue = false, Flag = "Noclip", Callback = function(v)
    if v then
        noclipConnection = RunService.Stepped:Connect(function()
            local char = LocalPlayer.Character
            if char then
                for _, part in ipairs(char:GetDescendants()) do
                    if part:IsA("BasePart") then part.CanCollide = false end
                end
            end
        end)
    else
        if noclipConnection then noclipConnection:Disconnect(); noclipConnection = nil end
    end
end})

local infJumpConnection
Tabs.Player:CreateToggle({Name = "Inf Jump", CurrentValue = false, Flag = "InfJump", Callback = function(v)
    if v then
        infJumpConnection = UserInputService.JumpRequest:Connect(function()
            local char = LocalPlayer.Character
            local humanoid = char and char:FindFirstChildOfClass("Humanoid")
            if humanoid then humanoid:ChangeState(Enum.HumanoidStateType.Jumping) end
        end)
    else
        if infJumpConnection then infJumpConnection:Disconnect(); infJumpConnection = nil end
    end
end})

------------------------------------------------------------------
-- 14.  MISC TOGGLES (Instant Interact & Auto Stun Deer)
------------------------------------------------------------------
Tabs.Main:CreateSection("Misc")
Tabs.Main:CreateToggle({Name = "Instant Interact", CurrentValue = false, Flag = "InstantInteract", Callback = function(v)
    instantInteractEnabled = v
    local originalHoldDurations = {}
    local conn
    if v then
        conn = task.spawn(function()
            while instantInteractEnabled do
                for _, obj in ipairs(workspace:GetDescendants()) do
                    if obj:IsA("ProximityPrompt") then
                        if originalHoldDurations[obj] == nil then originalHoldDurations[obj] = obj.HoldDuration end
                        obj.HoldDuration = 0
                    end
                end
                task.wait(0.5)
            end
        end)
    else
        for obj, value in pairs(originalHoldDurations) do
            if obj and obj:IsA("ProximityPrompt") then obj.HoldDuration = value end
        end
        originalHoldDurations = {}
    end
end})

Tabs.Main:CreateToggle({Name = "Auto Stun Deer", CurrentValue = false, Flag = "AutoStunDeer", Callback = function(v)
    if v then
        torchLoop = RunService.RenderStepped:Connect(function()
            pcall(function()
                local remote = ReplicatedStorage:FindFirstChild("RemoteEvents") and ReplicatedStorage.RemoteEvents:FindFirstChild("DeerHitByTorch")
                local deer = workspace:FindFirstChild("Characters") and workspace.Characters:FindFirstChild("Deer")
                if remote and deer then remote:InvokeServer(deer) end
            end)
            task.wait(0.1)
        end)
    else
        if torchLoop then torchLoop:Disconnect(); torchLoop = nil end
    end
end})

------------------------------------------------------------------
-- 15.  DONE
------------------------------------------------------------------
